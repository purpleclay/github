# Copyright (c) 2023 Purple Clay
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# in the Software without restriction, including without limitation the rights
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: code-security

on:
  workflow_call:
    inputs:
      go-version:
        description: "The version of go to install and configure for the job"
        required: true
        type: string
    secrets:
      github-token:
        description: "The reserved GitHub APP installation token known as GITHUB_TOKEN"
        required: true

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  grype-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Git Clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version }}
          cache: true

      - name: Grype Scan
        id: grype
        uses: anchore/scan-action@v6
        with:
          path: "."
          severity-cutoff: medium
          fail-build: true
          output-format: sarif

      # Conditionally upload the sarif report if we are on the main branch
      - name: Upload Sarif Report
        if: ${{ contains(github.event.repository.default_branch, github.ref) }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.grype.outputs.sarif }}
          token: ${{ secrets.github-token }}

  govulncheck:
    runs-on: ubuntu-latest
    steps:
      - name: Git Clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ inputs.go-version }}
          cache: true

      - name: govulncheck
        continue-on-error: true
        run: |
          go install golang.org/x/vuln/cmd/govulncheck@latest
          govulncheck ./...

      # TODO: capture output as a sarif report and upload to GitHub

  dependency-review:
    # Only run dependency review on a pull request as intended
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: Git Clone
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
        with:
          allow-licenses: MIT, Apache-2.0, BSD-2-Clause, BSD-3-Clause, ISC
